#ifndef SCHEMA_VERIFIER_H
#define SCHEMA_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef SCHEMA_READER_H
#include "schema_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int Neon_BinaryEncoding_variables_type_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Neon_BinaryEncoding_frame_map_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Neon_BinaryEncoding_function_map_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Neon_BinaryEncoding_map_verify_table(flatcc_table_verifier_descriptor_t *td);

static int Neon_BinaryEncoding_variables_type_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 8, 8, INT64_C(536870911)) /* indexes */)) return ret;
    return flatcc_verify_ok;
}

static inline int Neon_BinaryEncoding_variables_type_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_variables_type_identifier, &Neon_BinaryEncoding_variables_type_verify_table);
}

static inline int Neon_BinaryEncoding_variables_type_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_variables_type_type_identifier, &Neon_BinaryEncoding_variables_type_verify_table);
}

static inline int Neon_BinaryEncoding_variables_type_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Neon_BinaryEncoding_variables_type_verify_table);
}

static inline int Neon_BinaryEncoding_variables_type_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Neon_BinaryEncoding_variables_type_verify_table);
}

static int Neon_BinaryEncoding_frame_map_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* start_index */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &Neon_BinaryEncoding_variables_type_verify_table) /* variables */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 8, 8, INT64_C(536870911)) /* constant_indexes */)) return ret;
    return flatcc_verify_ok;
}

static inline int Neon_BinaryEncoding_frame_map_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_frame_map_identifier, &Neon_BinaryEncoding_frame_map_verify_table);
}

static inline int Neon_BinaryEncoding_frame_map_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_frame_map_type_identifier, &Neon_BinaryEncoding_frame_map_verify_table);
}

static inline int Neon_BinaryEncoding_frame_map_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Neon_BinaryEncoding_frame_map_verify_table);
}

static inline int Neon_BinaryEncoding_frame_map_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Neon_BinaryEncoding_frame_map_verify_table);
}

static int Neon_BinaryEncoding_function_map_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &Neon_BinaryEncoding_variables_type_verify_table) /* variables */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* entry_frame_index */)) return ret;
    return flatcc_verify_ok;
}

static inline int Neon_BinaryEncoding_function_map_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_function_map_identifier, &Neon_BinaryEncoding_function_map_verify_table);
}

static inline int Neon_BinaryEncoding_function_map_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_function_map_type_identifier, &Neon_BinaryEncoding_function_map_verify_table);
}

static inline int Neon_BinaryEncoding_function_map_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Neon_BinaryEncoding_function_map_verify_table);
}

static inline int Neon_BinaryEncoding_function_map_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Neon_BinaryEncoding_function_map_verify_table);
}

static int Neon_BinaryEncoding_map_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &Neon_BinaryEncoding_function_map_verify_table) /* functions */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &Neon_BinaryEncoding_frame_map_verify_table) /* frames */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 1, 1, INT64_C(4294967295)) /* data */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 3, 0, &Neon_BinaryEncoding_variables_type_verify_table) /* data_shape */)) return ret;
    return flatcc_verify_ok;
}

static inline int Neon_BinaryEncoding_map_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_map_identifier, &Neon_BinaryEncoding_map_verify_table);
}

static inline int Neon_BinaryEncoding_map_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Neon_BinaryEncoding_map_type_identifier, &Neon_BinaryEncoding_map_verify_table);
}

static inline int Neon_BinaryEncoding_map_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Neon_BinaryEncoding_map_verify_table);
}

static inline int Neon_BinaryEncoding_map_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Neon_BinaryEncoding_map_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_VERIFIER_H */
